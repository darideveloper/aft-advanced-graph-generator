---
import Info from '../../components/ui/Info.astro'
import Bar from '../../components/ui/Bar.astro'
import Line from '../../components/ui/Line.astro'

const { data } = Astro.props

interface Competencia {
  titulo: string
  valor: number
  promedio: number
  minimo: number
  maximo: number
  descripcion: string
  color: string
}

let chartData: Competencia[] = []
let error = false
let errorMessage = ''
let loading = true
let useAverage = false

chartData = data['chart_data']
useAverage = data['use_average']
loading = false

if (chartData === undefined || useAverage === undefined) {
  loading = false
  error = true
  errorMessage = 'Error al cargar los datos'
}

console.log({ chartData, useAverage, loading })

function calculatePercentage(valor: number): number {
  return (valor / 10) * 100
}

// Calculate colors
const colorsDistribution = [
  {
    num: 4,
    color: 'bg-tech-orange border-tech-orange',
  },
  {
    num: 5,
    color: 'bg-tech-green border-tech-green',
  },
  {
    num: 4,
    color: 'bg-tech-blue border-tech-blue',
  },
]
const colors = colorsDistribution.flatMap((item) => {
  return [...Array(item.num).fill(item.color)]
})
---

<div class:list={['w-full', 'max-w-7xl', 'mx-auto', 'p-6', 'bg-white']}>
  {loading && <p class='text-center text-gray-600'>Cargando datos...</p>}
  {
    error && (
      <p class='text-center text-red-500'>
        Error al cargar los datos: {errorMessage}
      </p>
    )
  }
  {
    !loading && !error && chartData.length === 0 && (
      <p class='text-center text-gray-600'>
        No se encontraron datos para este participante.
      </p>
    )
  }

  {
    !loading && !error && chartData.length > 0 && (
      <div class:list={[]}>
        <h1 class='text-2xl font-bold flex items-center justify-between mb-6 mt-4'>
          <span>Resultados por tema</span>
          <span class='h-full flex items-center justify-center gap-1'>
            <span
              class:list={['h-7', 'w-1', 'bg-gray-600', 'mr-1', 'inline-block']}
            />
            <span class:list={['text-lg', 'italic']}>
              {useAverage ? 'Promedio Global' : 'Perfil deseado'}
            </span>
          </span>
        </h1>

        <div class:list={['space-y-2']}>
          {chartData.map((item, index) => (
            <div
              class:list={[
                'flex',
                'flex-col',
                'sm:flex-row',
                'gap-4',
                'items-start sm:items-center',
              ]}
            >
              <div class:list={['w-5/12']}>
                <Info
                  title={item.titulo}
                  description={item.descripcion}
                />
              </div>

              <div class:list={['w-7/12', 'relative']}>
                <div class:list={['relative']}>
                  <Bar
                    value={item.valor}
                    color={colors[index]}
                    percentage={calculatePercentage(item.valor)}
                    promedio={item.promedio}
                    min={item.minimo}
                    max={item.maximo}
                  />

                  <Line
                    position={4}
                    color='bg-tech-orange'
                  />
                  <Line
                    position={7}
                    color='bg-tech-green'
                  />
                  <Line
                    position={10}
                    color='bg-tech-blue'
                  />
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    )
  }
</div>
